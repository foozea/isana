/*
  Isana, a software for the game of Go
  Copyright (C) 2014 Tetsuo FUJII

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

package hashing

import (
	. "github.com/foozea/isana/board/stone"
)

type Category int

const (
	Eye   Category = 1
	Force Category = 2
)

type Miniboard [9]Stone
type PatternBoard map[uint64]Category

var EyePatterns, HanePatterns, KiriPatterns, EdgePatterns PatternBoard

func init() {
	// Eye
	EyePatterns = PatternBoard{
		4313789496511952198: 1, 6775805729109881248: 1, 483364053768701006: 1,
		10490431198701197838: 1, 17001191051423721366: 1, 16521879647911032922: 1,
		10056002971872494745: 1, 1324090973924092673: 1, 18144029858448717637: 1,
		717943882330605314: 1, 670621986758362103: 1, 16953937289335972707: 1,
		10473890581720559855: 1, 13323634468224724648: 1, 14494907946447122400: 1,
		2045165960518398008: 1, 7526318065619187853: 1, 11712610737336622635: 1,
		11967720739132247971: 1, 466832219996057263: 1, 14823085838847065704: 1,
		5660048695175062918: 1, 15275334088770149270: 1, 3769948258056445163: 1,
		1378669628804559732: 1, 16479720024769144026: 1, 4279978469599769011: 1,
		3422473389112685597: 1, 10732403807533176582: 1, 2380445011572359472: 1,
		7586073940484181740: 1, 14736853720178640905: 1, 14326944191960623193: 1,
		12432876489802810642: 1, 6510468926853008073: 1, 7460525355938955060: 1,
		5692925042704996114: 1, 15906437116488833242: 1, 7140302979250564796: 1,
		14297704893612240044: 1, 12914782374493584492: 1, 9653468166452244916: 1,
		4630459123173151838: 1, 7551124163937811576: 1, 13285390176052898397: 1,
		906052378621970954: 1}

	HanePatterns = PatternBoard{
		10724963526549898664: 2, 17752203916408793622: 2, 16585059965197987454: 2,
		5096492180413280934: 2, 3740615429068972503: 2, 10106396527879722929: 2,
		8668545840306966119: 2, 10627949397339245314: 2, 5815662857478543457: 2,
		990489699855970786: 2, 3140217562917793208: 2, 10955321157095590044: 2,
		17966768904001207777: 2, 4851496327184734674: 2, 891683584632587986: 2,
		10167473183479621573: 2, 1434680242978598808: 2, 11788700780176472804: 2,
		8274624718529107170: 2, 6876424399301983099: 2, 11415615128975440782: 2,
		9848950166117916049: 2, 2794954136769100851: 2, 15201807087051036504: 2,
		5185321824597821257: 2, 12306250198559089838: 2, 3964865373428837367: 2,
		14001472347815501800: 2, 3173635612677833258: 2, 10394082653641701940: 2,
		1210806730720673949: 2, 5693541572426150187: 2, 8351557426219889335: 2,
		18204311222033205401: 2, 3374706748145767463: 2, 17957333646312190950: 2,
		11358796343139299189: 2, 7594864013572090366: 2, 5669414925242876564: 2,
		5015327939421989806: 2, 11542579936548908576: 2, 12877352146472396993: 2,
		7836942445966893116: 2, 10907755867671794028: 2, 12335562667118672799: 2,
		3581869146219069325: 2, 13478846524105287933: 2, 1792092842524542626: 2,
		17367491105379398898: 2, 15810197488465912819: 2, 15722671291328058247: 2,
		12967994783817658548: 2, 13432306212224369695: 2, 8855590640981849726: 2,
		8678639120564998897: 2, 288171835310440575: 2, 11128484078045438545: 2,
		14717536692371421937: 2, 4264021362783708424: 2, 7477768851867171771: 2,
		15955092877100076387: 2, 1990580326137952148: 2, 7892907383257834462: 2,
		6476744949062948383: 2, 16340930595067864158: 2, 2316282683613723352: 2,
		1450998731393108669: 2, 2793974856333890072: 2, 7260204106022376853: 2,
		7982632275726783208: 2, 5803176473515459831: 2, 12629861279680427984: 2,
		18152632277018682859: 2, 6596982658440847216: 2, 7753984617756278488: 2,
		7022532563267530689: 2, 15333968201124984539: 2, 13755669315574399032: 2,
		3796696829551017779: 2, 2637490612365315138: 2, 8393019485464157477: 2,
		12466927929815318923: 2, 5169190994520691698: 2, 1833107713567323421: 2,
		2461618186338900024: 2, 7719622025590929820: 2, 12483705667379780893: 2,
		8283822276958171201: 2, 14997671965060775163: 2, 6304647170004434244: 2,
		5351001145011521716: 2, 17528646250761118864: 2, 1916617208428910272: 2,
		2626932580418798001: 2, 17803830433783554041: 2, 17720227207086718674: 2,
		14863706603930996796: 2, 7881260806458974526: 2, 2271798549715818566: 2,
		414705720109003385: 2, 6182341837054668525: 2, 6594020168266002779: 2,
		5374046359056337492: 2, 7116698423887739653: 2, 13553412600606940349: 2,
		5178907836743212533: 2, 11922603473240988039: 2, 8671660000388310487: 2,
		7179875594536317551: 2, 12736617548944591390: 2, 432978684706245400: 2,
		17296324277794105352: 2, 7320564729228888187: 2, 9348632040455786310: 2,
		8509211956411978826: 2, 11691498313862955719: 2, 10883547112585535860: 2,
		9192773424865119057: 2, 8542042537566831008: 2, 2217202298101628979: 2,
		2754192643144608893: 2, 15405677047349745551: 2, 8771722983240990589: 2,
		6900548932175535148: 2, 8366741788823365278: 2, 1574806391412413836: 2,
		5250093109969318941: 2, 14764095106503536643: 2, 2774492871944267912: 2,
		5717505598313371063: 2, 14272782871645522203: 2, 4328107059367945695: 2,
		9621024889508808582: 2, 3598009495855283865: 2, 3383908421320355972: 2,
		15957616394452301142: 2, 11998468614098780783: 2, 3070260462447155067: 2,
		9269802076383598119: 2, 17295415941812543514: 2, 16139824977487817309: 2,
		11683183141735648448: 2, 2375765669760648598: 2, 17368948841129869137: 2,
		14086369609506355645: 2, 15234229667559076818: 2, 11978236553680881306: 2,
		649015646339745656: 2, 2130045843991308579: 2, 11998674463023540199: 2,
		2422710515685075316: 2, 4158105883159145501: 2, 12140043564534281991: 2,
		4729178300503688535: 2, 9767981357125317970: 2, 1385952157778165501: 2,
		5595771013533141635: 2, 4664776742700650419: 2, 16221098754249520446: 2,
		5259994296112992446: 2, 14631339415131083789: 2, 1188632701569326158: 2,
		10403341813403503917: 2, 2062591641460779989: 2, 5717438976661336127: 2,
		16878241221041555994: 2, 18327103231192621472: 2, 13644833885565443935: 2,
		7691072872812083358: 2, 14867179077069804967: 2, 7610037277936017814: 2,
		14437330042384058009: 2, 5239394569645409285: 2, 8837094917983423726: 2,
		18161938525775514182: 2, 1864168085780058698: 2, 13110382677430242721: 2,
		16413005732865994934: 2, 2360688815569349820: 2, 1853609069526273992: 2,
		11632061494161864277: 2, 2005974478607311663: 2, 5749499703139634174: 2,
		17391851735025776215: 2, 6276614732194440055: 2, 4708955790919052038: 2,
		4680872581792471816: 2, 7622237939885760642: 2, 11571242733852436836: 2,
		477922476100239829: 2, 12211542228900683870: 2, 4381767294176410792: 2,
		1954843936170280669: 2, 9822514852956791796: 2, 6877771161801065294: 2,
		3466013581440231947: 2, 3349278271805633392: 2, 8857166951919245397: 2,
		10982753794489321115: 2, 12285589954817461872: 2, 13979924526088715614: 2,
		17892817058955893941: 2, 15966132300569633586: 2, 15509113696776292539: 2,
		1573824495372990486: 2, 15072955948013618744: 2, 5330440623281304042: 2,
		17596566368242960113: 2, 11396560111799681711: 2, 11706441860820944326: 2,
		6172546917610001750: 2, 10391699559521764395: 2, 18302717646101342374: 2,
		2434637135324749938: 2, 15946793428426038396: 2, 11490259257040954095: 2,
		4247374132726451886: 2, 8552030286475874495: 2, 10356303168442877946: 2,
		18370500489992567016: 2, 11831333137096733774: 2, 13252874038097422699: 2,
		13218046745428537608: 2, 12522036241062418116: 2, 3943741249985940967: 2,
		17374954942394099181: 2, 14485438762748061401: 2, 13578978917318174470: 2,
		101339771539466049: 2, 12114477251109276860: 2, 17951234091255900506: 2,
		17774879862974691928: 2, 2993289398797860735: 2, 2197511460233627511: 2,
		16615765137679802167: 2, 6451222460138106276: 2, 12265130905814080203: 2,
		3017498187996385127: 2, 16767873563665208593: 2, 18137176274014278386: 2,
		13213690864783613731: 2, 9000661264468448077: 2, 2065715405936798932: 2,
		647388353280334840: 2, 10555909381650898922: 2, 186995674939640085: 2,
		9733868043791439108: 2, 3879586045867669081: 2, 16413702473156107933: 2,
		7865367758422869129: 2, 10552361676345520577: 2, 10481116349297949142: 2,
		13453483313257904977: 2, 11849920324504467667: 2, 5358620347680944257: 2,
		4590475483701912756: 2, 1813657971252229129: 2, 7431379235330420191: 2,
		1353492198210386410: 2, 17676050395447099922: 2, 17732129701288099501: 2,
		1697154055344837616: 2, 6832824794322673370: 2, 18377809990428320872: 2,
		10822066548826416259: 2, 14144053756106679037: 2, 17988974443286031902: 2,
		10252098619245906175: 2, 906968581481806855: 2, 17806782576104321635: 2,
		10022797445683457245: 2, 13745109270930247975: 2, 10962822558342844960: 2,
		16676044745189278647: 2, 18007712728207215784: 2, 4657688638389850638: 2,
		15293757059423724836: 2, 14646677662376539402: 2, 8661179928435596908: 2,
		14770514707757231550: 2, 1687248642448147860: 2, 9647241171073973309: 2,
		3739354323485019213: 2, 1643931544782231096: 2, 17193429494550257981: 2,
		5699505113150069403: 2, 10040843079142089713: 2, 4530624979769244395: 2,
		728956519596049126: 2, 9919931601679253364: 2, 7466324653921532591: 2,
		1503095485768791256: 2, 8909646670851272122: 2, 15387107413972474642: 2,
		17361406827536598617: 2, 5384735038252476133: 2, 4677619642073581237: 2,
		12047326631784099804: 2, 9049623313050015662: 2, 7098603484204962209: 2,
		3552608615786722388: 2, 13323988712521999627: 2, 2368310766073975945: 2,
		15458634150444433536: 2, 7045447594538791698: 2, 15691301051673843803: 2,
		6549701958381205553: 2, 7306170137761241988: 2, 17741505410700483086: 2,
		9808002800247521602: 2, 17598964873427151066: 2, 12404875697200678012: 2,
		3443124716970261323: 2, 6305164802860663585: 2, 9012544770324369357: 2,
		2074312080927171283: 2, 2030737454136800439: 2, 3342850938397625157: 2,
		2848031854736198108: 2, 10384280625540226711: 2, 14328448177226575999: 2,
		4874123150714453024: 2, 14559264174006272229: 2, 10868765010581548267: 2,
		10018208667785179488: 2, 15579570985877671113: 2, 4732193558633549125: 2,
		7522824034160278806: 2, 18323392792510552469: 2, 18077615971192442029: 2,
		5686850521492561292: 2, 4563107455636189904: 2,
		3353623373785146174: 2, 13571448265847165841: 2, 14556618119774858958: 2,
		3080506192941340271: 2, 7259187027931554727: 2, 16163815924113867616: 2,
		5582071300423259124: 2, 697875480244045223: 2, 14490800394108182252: 2,
		1772382298631264698: 2, 12924713019517682790: 2, 3355607887203577094: 2,
		293757184726808564: 2, 13116503016635478977: 2, 16514359153748312144: 2,
		18037474156454908879: 2, 8996850492243862000: 2, 17257406278405152768: 2,
		10698550222935040767: 2, 10706851000453246732: 2, 3960749188093914961: 2,
		5727989555201270048: 2, 15502658911026779398: 2, 5740358257684710905: 2,
		10973521098662683192: 2, 3788961000708451884: 2, 18221011673987317419: 2,
		18311532877706196251: 2, 5047931553974818936: 2, 1242085456275555387: 2,
		1202155270470806290: 2, 14384625858994209056: 2, 4861211826706254029: 2,
		13799707717540104530: 2, 10457922668365239640: 2, 3872841715404752368: 2,
		6859787994346785890: 2, 10753183854453865098: 2, 10464663948006775648: 2,
		9320065291471802672: 2, 14493456186758789062: 2, 13234872041105565255: 2,
		2048781915203582875: 2, 13667651119375372049: 2, 1021156992213984269: 2,
		13182698187984285706: 2, 9575751234618960740: 2, 16081258813840563457: 2,
		9347507998423702723: 2, 5935927645081990082: 2, 6222033878038018818: 2,
		12883644385238169802: 2, 11993836487508506537: 2, 7583952584856136539: 2,
		8643468563084210431: 2, 11756727375029747726: 2, 933856946660094464: 2,
		14860404774613771790: 2, 1408088445261160863: 2, 9898665227711568183: 2,
		7752420051924390722: 2, 10736660729163240352: 2, 10189011469588025847: 2,
		13121483151128997500: 2, 16857374908192492900: 2, 9028894368380624220: 2,
		9222067225995671800: 2, 930639191174295485: 2, 17134174910185932196: 2,
		11467289870037864033: 2, 11856018928746292: 2, 10817697564185938600: 2,
		6521980154464036275: 2, 6561909138862148250: 2, 1816181762412661820: 2,
		17975442880450369858: 2, 15167668175909806753: 2, 17679809861876319288: 2,
		13982523020387575497: 2, 7533666576177357664: 2, 4539612971853981526: 2,
		4272668040354323714: 2, 14123993411666146807: 2, 964774983069912748: 2,
		16871746920777586599: 2, 3387740895024103983: 2, 15888593912390580632: 2,
		17935504096126367339: 2, 14083684196278933398: 2, 17703151722417784819: 2,
		14393372026985979037: 2, 6523109836389938742: 2, 9287811559102765323: 2,
		3661096644397475729: 2, 14949939103701368443: 2, 15160687481989655705: 2,
		11272645289445796600: 2, 10962272482333675921: 2, 9053239552435490991: 2,
		16177314742655349820: 2, 872355886692155379: 2, 5400724799587971678: 2,
		2346513650021578303: 2, 8183802047374299240: 2, 17361143905284882028: 2,
		2053710370299786856: 2, 8653649555596274427: 2, 3343065447051046605: 2,
		2873772367690617950: 2, 9326169445716375578: 2, 4305132444717375177: 2,
		1751043745928133987: 2, 9517954104964425903: 2, 14705917589481611341: 2,
		16173598186490951671: 2, 9754482019162833422: 2, 14072059547676343996: 2,
		12850606369275496616: 2, 12493238293327302540: 2, 9060226433776586002: 2,
		15172876902339506002: 2, 4472482405930347173: 2, 5743826701401692228: 2,
		12477705877322914615: 2, 8998623513370101978: 2, 8566824641445786121: 2,
		4185668595936090314: 2, 8985574246927077977: 2, 5334035748675776917: 2,
		14362266622377202030: 2, 211739972922587836: 2, 1805639997559088406: 2,
		11139546350044951605: 2, 6826056272909397363: 2, 16555312323516337571: 2,
		10514148759925075004: 2, 7912229718931741439: 2, 11487185161791789786: 2,
		16481171785531260156: 2, 5638490405116016981: 2, 3157187492591654041: 2,
		5161113069507245905: 2, 12005514971210660442: 2, 13637958193159324386: 2,
		12403756740277753849: 2, 8807027814536539320: 2, 13527640552641610130: 2,
		3114819701639170799: 2, 5453526065125914518: 2, 4577727880960529929: 2,
		6805156562908189719: 2, 9389252195650019602: 2, 7634832154947064383: 2,
		10703247454116623025: 2, 673901511448610412: 2, 17604576505317820662: 2,
		17353952473674946374: 2, 8307146818062620128: 2, 1514751276260609275: 2,
		4902083961014807212: 2, 12557310280931853569: 2, 3115954051524483434: 2,
		15786708608621254081: 2, 7870203995005884724: 2, 11198659925272902448: 2,
		7697841392480521015: 2, 7914537767891801287: 2, 9030527658872439009: 2,
		15893516462997664875: 2, 14043741401692859194: 2, 12948777998844348821: 2,
		961837439491090310: 2, 5712635345979443210: 2, 7521705347283545747: 2,
		15693917670713721804: 2, 7126405247645084186: 2, 2470825990882571191: 2,
		4952717002864328156: 2, 5340627490645770157: 2, 12670500240373099048: 2,
		2992740273322867918: 2, 3073777109511579078: 2, 866038676670718542: 2,
		2582828512258219166: 2, 11514997939961316242: 2, 13190029099098947343: 2,
		11801343893117029885: 2, 17408531133387247411: 2, 5138539006949031949: 2,
		8478880605515454632: 2, 6907499460498194833: 2, 14779307621842124550: 2,
		2784255631056456747: 2, 12579875195482321501: 2, 17294296017981961119: 2,
		4135634560779868993: 2, 16439689279348509854: 2, 9236650505513377903: 2,
		14360554582014402390: 2, 1863044730943914447: 2, 2050625901587707299: 2,
		8710673871181769008: 2, 667052754288756820: 2, 12097938470466767621: 2,
		15549241608233720053: 2, 9515373720916305559: 2, 4297861273230430449: 2,
		15446265447956800601: 2, 6514526313638132677: 2, 17384940857841183722: 2,
		14537190487588833188: 2, 6857058080814400090: 2, 11807662612401537989: 2,
		15815991151988205160: 2, 10505916879743178923: 2, 2414141575374812361: 2,
		6954802759528180583: 2, 13180258202120404530: 2, 6995853562410959950: 2,
		16184436384516602372: 2, 11479708128814412784: 2, 17705285773380749771: 2,
		8717124536362690312: 2, 12298501207925078685: 2}

	KiriPatterns = PatternBoard{
		7953512526201683971: 2, 9450837626270551617: 2, 1089991835347422539: 2,
		16602838791260439770: 2, 15343381858284877808: 2, 3259740929466873850: 2,
		12366572160881433800: 2, 1966884532174525261: 2, 885889165200212809: 2,
		2720459334309493814: 2, 5836907646340031974: 2, 17873634360530541985: 2,
		16277371261724065511: 2, 17034472506599962139: 2, 856802868577750499: 2,
		8204986724679472359: 2, 10132077193577818367: 2, 2249166591063532204: 2,
		9502517858989665203: 2, 12916369008871119466: 2, 17793113890072269052: 2,
		17965434957455559660: 2, 12609062320109511804: 2, 12626680362655793634: 2,
		645253795361142227: 2, 7779821936497326972: 2, 16314118526915636514: 2,
		680648907879824105: 2, 9140088887997171891: 2, 13640374226105216201: 2,
		5575327748256231281: 2, 1885981699989658151: 2, 2051277108606653338: 2,
		12619385001978515418: 2, 873691483646003710: 2, 7405693686207328083: 2,
		9436067413038878811: 2, 4617549172615739600: 2, 1108083473677002735: 2,
		4126186075562133999: 2, 13664724917395923258: 2, 7458666141562880666: 2,
		18307194662262577968: 2, 7352493861989900346: 2, 17637267101248381699: 2,
		10259641952029048793: 2, 10931014869789278217: 2, 12436572065951636254: 2,
		1958097340386814791: 2, 4055597244696839457: 2, 14035171586120083985: 2,
		2709530565787130026: 2, 4040724631983440949: 2, 5510956972438277902: 2,
		11748729338790199589: 2, 9517302391005400726: 2, 2151315816906147356: 2,
		2040931642403333901: 2, 1012308504801031843: 2, 4106450922920364486: 2,
		17646632080406414353: 2, 4059810159534832916: 2, 5621501590865798595: 2,
		574792144442037289: 2, 16394977833329295258: 2, 70079349646011985: 2,
		9865875565367043248: 2, 6062555207338866678: 2, 12236182705808591488: 2,
		18290054848416490065: 2, 13809717513743129596: 2, 15018709117034625140: 2,
		15046030486084736817: 2, 18124683754185121871: 2, 2551001844964011479: 2,
		3981980851019436758: 2, 5345286813724216592: 2, 10562237348793270684: 2,
		9284324187653817757: 2, 6515861909384023496: 2, 17122689931472294789: 2,
		12061434227495407831: 2, 12450951635592196022: 2, 9525610515648094089: 2,
		15481819573295300491: 2, 7966321831825772016: 2, 4571431085664056315: 2,
		9465221843279828568: 2, 4184033259138854262: 2, 8644384693130839794: 2,
		5999891589401871241: 2, 4843969982847896642: 2, 16556509934847933358: 2,
		5493499388033241110: 2, 4113280508019893601: 2, 7394175856125021135: 2,
		3827734864555805836: 2, 6418667581014270937: 2, 5002831965564702300: 2,
		14935271892635706093: 2, 16027416611734709069: 2, 18161020670292819019: 2,
		7512533587077590968: 2, 1357121527723648998: 2, 13343823301805080725: 2,
		13900883048065461330: 2, 8032588920059926882: 2, 17143324364933318462: 2,
		14970033453514972934: 2, 8294673088492829407: 2, 6208473444400121122: 2,
		12225654222793217203: 2, 7679804284263334939: 2, 5048266686027660865: 2,
		4592334128694151839: 2, 10578801010536464520: 2, 6347726460711249076: 2,
		436997779558194871: 2, 7268346678642929056: 2, 11605263711152954842: 2,
		3579375335726536588: 2, 8885577046298260428: 2, 12597884747053219185: 2,
		5503221143664926225: 2, 10939678407520758662: 2, 13395916960278945736: 2,
		10715741463217679911: 2, 5875251708203061279: 2, 10257496258935648458: 2,
		7304972526496771465: 2, 10130238429388527328: 2, 17197183634480075648: 2,
		17845093630289515294: 2, 3404660479799582393: 2, 10148034846429871172: 2,
		13867847852638812600: 2, 15744970596223979348: 2, 11661374385971418920: 2,
		4066526901495886343: 2, 13393561836229768531: 2, 17359682334538992592: 2,
		12572048931232930199: 2, 413743651518891083: 2, 584029889649981472: 2,
		13320433023197173686: 2, 16515593780241686108: 2, 14773374793943238451: 2,
		4819562874502320728: 2, 7052955725837059124: 2, 16108771279492863101: 2,
		9038308564691885175: 2, 17263669167594855422: 2, 1766857332719617974: 2,
		963758722699153978: 2, 5593859714325123348: 2, 10014080811041299437: 2,
		11687801028258709334: 2, 6153689135422626367: 2, 2656809098672436579: 2,
		8866241101819529965: 2, 5305924331367330046: 2, 11617884917754452699: 2,
		5424168542721249241: 2, 3276425262136266459: 2, 18300051255985369934: 2,
		6849614505022689524: 2, 5107514303354303410: 2, 17688128545309099283: 2,
		4913348209465366057: 2, 8318003255568500558: 2, 14386364716951598236: 2,
		16035943134742770985: 2, 5981691097543158061: 2, 671986364180061691: 2,
		13329223162860679332: 2, 2280117638887741805: 2, 2153197690488860470: 2,
		6156475225056967069: 2, 12949975611383906200: 2, 4388513103333965869: 2,
		15468615179494228395: 2, 8521575816420244341: 2, 16040033698421989510: 2,
		14910330848934454510: 2, 6495787745315871091: 2, 13961651699863635007: 2,
		2436645820789311603: 2, 12359517354800363384: 2, 15597950342804891100: 2,
		14768695640956044181: 2, 2825816618240464574: 2, 7807301676559827050: 2,
		2539206902601755843: 2, 5846123179964039924: 2, 6021598214244274924: 2,
		5871749310180390492: 2, 16951368894716668159: 2, 594375359007411383: 2,
		5451614437608423978: 2, 9338938028500213224: 2, 16976986660271560590: 2,
		11300018254289593220: 2, 4643576715330660067: 2, 7936560736322205986: 2,
		2200155878662972037: 2, 9097686849011477332: 2, 8868714317454176984: 2,
		2043862568929904934: 2, 1642506919593246088: 2, 15628371160124526121: 2,
		840053331904741217: 2, 5264180867250295832: 2, 13837126803866902945: 2,
		1194171979334989700: 2, 2319842173326851907: 2, 7235931807197028679: 2,
		13654741514461412348: 2, 17437165799660362403: 2, 17818492902264479469: 2,
		9565770216306518607: 2, 7934270037570827825: 2, 13600088557302376559: 2,
		14438384165434962068: 2, 12777117990640304910: 2, 16772112299134626609: 2,
		16267450187077323376: 2, 15432437925420543941: 2, 2298035555453875145: 2,
		1685987960050625471: 2, 10410419801506030892: 2, 15039357251895587462: 2,
		17478668998641852701: 2, 7567165019842639821: 2, 1383870118736122070: 2,
		6563507062505471782: 2, 8027185780927766871: 2, 8622191295191708139: 2,
		3815760370089215506: 2, 15881585777871589785: 2, 14841322061343757516: 2,
		17692860993746048349: 2, 4357178041460399573: 2, 13238629053295014888: 2,
		14510424189692306556: 2, 759980613303691938: 2, 12001037977126390220: 2,
		9780690663166718547: 2, 7101284825887539082: 2, 1572771955218796059: 2,
		15396889589376757637: 2, 5511294709454486194: 2, 7164625232507848890: 2,
		16972982156060046380: 2, 15150883682115017663: 2, 18438116096506552214: 2,
		9170924479636474289: 2, 7737615084489504432: 2, 9202221135442942463: 2,
		6237480367258925538: 2, 15938025777283036226: 2, 15333050422012149974: 2,
		7701055205181650585: 2, 17917475779843684679: 2, 14829302965361802726: 2,
		3106782136431073345: 2, 28531858492783547: 2, 4274092659973289650: 2,
		8795761430432190525: 2, 4450866157102601710: 2, 15698306738294648922: 2,
		17279173762782358759: 2, 17579565349925447799: 2, 4481896756592192398: 2,
		4014855350337622301: 2, 3639356473921987358: 2, 15755293305155926130: 2,
		8877531863687153150: 2, 3587651524939057599: 2, 6232572040582359468: 2,
		9515947998395131174: 2, 4994991050474787530: 2, 11935007394795519326: 2,
		7364508559926397200: 2, 7003610173675640544: 2, 9708979209981072135: 2,
		9000266924235717990: 2, 15499392016339536272: 2, 17963168689870833108: 2,
		14707191294287842918: 2, 1758143860189177823: 2, 14502228237022044152: 2,
		5279803422488454810: 2, 10323956879982410143: 2, 539378754410598395: 2,
		5114536778782834058: 2, 9122260578811453975: 2, 4432807506001182538: 2,
		16165599995901212380: 2, 3636147026741266156: 2, 10351685277423514732: 2,
		11397614235790111906: 2, 13786794503210257330: 2, 1191615784608151996: 2,
		10579030945161869501: 2, 6371975439830345530: 2, 12161478149732540535: 2,
		5445614736162155264: 2, 2617150390657791270: 2, 13323841831125306144: 2,
		16799423981515611137: 2, 16238910016040001434: 2, 2674152774729483128: 2,
		5162128142321642439: 2, 1080020996456720109: 2, 2866014880859670256: 2,
		17600187432703785824: 2, 3003634814535601128: 2, 4993620831058848078: 2,
		5793913976609367855: 2, 15008430530254383467: 2, 16487610598254196576: 2,
		10770191509161941052: 2, 519342725359688512: 2, 3680423769224489407: 2,
		9411855430166672326: 2, 4908961546723063810: 2, 15214669433235968725: 2,
		9799586662133205874: 2, 1667960949169235091: 2, 11222759570803603920: 2,
		7810271106781178176: 2, 5689778361532433280: 2, 15070865750848273302: 2,
		1323139159772647967: 2, 9146027399019663282: 2, 7474535201284410761: 2,
		5699075644362847408: 2, 12805631711162324330: 2, 14432870331113993487: 2,
		14453848899649187785: 2, 7730098303395512726: 2, 537011031324467664: 2,
		10996419732084896605: 2, 434312698964737301: 2, 2269010192396505134: 2,
		17507740247192213783: 2, 18374328536403252931: 2, 10022685667036840694: 2,
		4250886688019128453: 2, 17989483847663650855: 2, 7550915976942328304: 2,
		7018777364123662958: 2, 9816248549229491812: 2, 7454567005112718036: 2,
		6934024122506779182: 2, 10209733415565710103: 2, 14169240029345922187: 2,
		4410668180098844064: 2, 15612416058635885202: 2, 3075651245953339514: 2,
		9701332794134637362: 2, 15558131916110567902: 2, 454771695875385774: 2,
		9461876553246651979: 2, 11417573496965481403: 2, 7367923478102799489: 2,
		16317398911398939953: 2, 11717793778426756489: 2, 3896308052100112140: 2,
		13124821545181197034: 2, 10515647752481921408: 2, 1161793492206531696: 2,
		16559772039416970805: 2, 11297995359431182388: 2, 11206631443185029370: 2,
		13682716670488194582: 2, 5258940173129213619: 2, 1693042629162500111: 2,
		3620719412236489303: 2, 15569671631570123759: 2, 12669883710884727825: 2,
		3473149947908960439: 2, 6944959246593137466: 2, 6845791080080441055: 2,
		12811848424775063268: 2, 2889819926180066927: 2, 16572169209827332405: 2,
		15182607895605964409: 2, 6811521591112724965: 2, 18356292523538782703: 2,
		12534867948993193081: 2, 1895963432173720608: 2, 6699379819428327060: 2,
		2348961905554599336: 2, 15116607518150522469: 2, 8191713839086439678: 2,
		1187841899219237495: 2, 9751837633914159008: 2, 8160613417725657357: 2,
		6087082461194818410: 2, 1585909524284007125: 2, 9109013813916250713: 2,
		2783168981508968637: 2, 10272751295957486111: 2, 17702782067386147274: 2,
		8764654074800019324: 2, 10806516739648346233: 2, 2930464908950981765: 2,
		2415057706360963780: 2, 3700318974491344132: 2, 16171595299299926006: 2,
		14188483752018806186: 2, 7639453466489084387: 2, 11573920001522390218: 2,
		11135139445129332643: 2, 11854873736512003361: 2, 14383390888682692022: 2,
		3671191052587744007: 2, 4294661327184292335: 2, 7952487568504069269: 2,
		2697547454996233961: 2, 13408797575626633773: 2, 9082344665211869654: 2,
		12338162242939265032: 2, 7044937751940502827: 2, 374046952439105471: 2,
		12976102500917094676: 2, 14981488236678972939: 2, 8452718966838159605: 2,
		3812701171980746134: 2, 7912600035522346182: 2, 9420110103822222560: 2,
		1131056878184347274: 2, 16244212853265762479: 2, 13194435999518280857: 2,
		7227262806400423521: 2, 15365246997104259709: 2, 4330716419627499080: 2,
		3477053378455457062: 2, 12006680778619430604: 2, 13235926236097155146: 2,
		1601640103572696518: 2, 5781681111219940760: 2, 7706623685688802321: 2,
		10985866651168226990: 2, 4400724682452972166: 2, 3638830295106304243: 2,
		3260694184781971912: 2, 14175203989902890811: 2, 3493185904119489548: 2,
		16844663508623297125: 2, 5320896089481928027: 2, 4635550065668880380: 2,
		10683812037529845353: 2, 8740585890349816463: 2, 6001729540519050646: 2,
		8771180430974434508: 2, 9726059230133234214: 2, 1283688716756627441: 2,
		4372046136585892527: 2, 8008126366779644022: 2, 11926707945918049345: 2,
		10508488205903900842: 2, 12445366600438332428: 2, 13372925538600100328: 2,
		9318318702103143564: 2, 12075174117181718681: 2, 7920344780582235609: 2,
		6806072763687576090: 2, 4946767628670903248: 2, 14852117923933779104: 2,
		12218190952714225068: 2, 3890500333875113189: 2, 10440638035542831302: 2,
		18435832081759883397: 2, 168698681818056316: 2, 16505016472535606515: 2,
		6039025338528235645: 2, 5921987942135173829: 2, 9808794195437037435: 2,
		10649783581014565485: 2, 12133608515906494214: 2, 15099483242653241156: 2,
		16055601784261637181: 2, 10771537714642731034: 2, 5074572866272424006: 2,
		14810808376308107126: 2, 3651679254811421078: 2,
		18012242812248014654: 2, 15415383871039981200: 2, 10771753803307378066: 2,
		14984532032376647099: 2, 14883106831425920228: 2, 1941375534194533737: 2,
		15132108054320100010: 2, 17089995826410497485: 2, 7033372299983692338: 2,
		16308829734032121759: 2, 4246409414562763539: 2, 10453200373346665069: 2,
		7331227052168951631: 2, 5925995126706709218: 2, 9550786303359188293: 2,
		12067040061895569604: 2, 4453842526682966080: 2, 8151367932068083220: 2,
		1017264564688127620: 2, 13636248186282152681: 2, 16700894903194039508: 2,
		3919635355636339856: 2, 9120733400301625273: 2, 15284042126969975867: 2,
		16755246924737263512: 2, 7510134738495621647: 2, 16125632324227647700: 2,
		303472667005576939: 2, 15244070657522810942: 2, 12649295527984528136: 2,
		13539560994180403378: 2, 742996274318966253: 2, 6548785754313412156: 2,
		10169828909130967254: 2, 13340033966001548990: 2, 16059128023876622759: 2,
		13980978097102080851: 2, 12317068719051666944: 2, 17997566808895923112: 2,
		5510031310256195356: 2, 7105761958079990812: 2, 13253927060428791654: 2,
		17833126984129440848: 2, 9624165258538721184: 2, 16368933776270278388: 2,
		6882473786118780552: 2, 10041599289920996808: 2, 2722377752132635018: 2,
		5066585406064249176: 2, 363736103897857697: 2, 4063559362904625065: 2,
		6016602579143015063: 2, 4465534534235097464: 2, 8394139546733563552: 2,
		6439623598068810095: 2, 11092918168518455845: 2, 12383483715237970017: 2,
		12877861997963874040: 2, 12421741072069122261: 2, 10810234276924955575: 2,
		15303170365219154066: 2, 47238957829921096: 2, 15596487006194110560: 2,
		7105688049476839828: 2, 17066166322259807473: 2, 11246020916093347662: 2,
		4257233882644310555: 2, 10113632514660538761: 2, 5357425486134986380: 2,
		12309288250226010774: 2, 7760727609698533981: 2, 9929628367916065526: 2,
		1093232121673838821: 2, 14203618443153751202: 2, 15541158138414833919: 2,
		2112971690588140517: 2, 15910714306077049714: 2, 84681689777413728: 2,
		3228902528341972325: 2, 5017749094319014197: 2, 7933000110440500127: 2,
		13727667669405638074: 2, 16501755997546760920: 2, 45322871871925492: 2,
		12758234047556154391: 2, 3282355283047157008: 2, 2558924405992421378: 2,
		6622663461538702539: 2, 16153802727731508562: 2, 4028622645209458180: 2,
		10116971524500260127: 2, 135985303917196417: 2, 15286255252136114984: 2,
		6496481573398279401: 2, 1176778538217464698: 2, 8992459408580029: 2,
		1143424460429940390: 2, 11839977645218602096: 2, 4395792837492769441: 2,
		6878688394580636995: 2, 10001369337383066860: 2, 10623542492756834452: 2,
		1876609896851139841: 2, 16292063706649902377: 2, 1385196539839240388: 2,
		13146006723288294880: 2, 4721160859386532936: 2, 16011415038365193300: 2,
		7985203365448825577: 2, 4130176737396586952: 2, 12805558147231477986: 2,
		11951153695577119576: 2, 13665062099828823174: 2, 542237488812296083: 2,
		12756601219250880939: 2, 15823514659149394877: 2, 13687120001589868552: 2,
		1309311774436596099: 2, 15659680107109598627: 2, 261249329142207214: 2,
		4589282272497210041: 2, 12348515134788179970: 2, 1379252386429215552: 2,
		6030460976162492534: 2, 5528261094941404669: 2, 1130321118618970246: 2,
		9359087057622628447: 2, 15022186057749118447: 2, 169687171369970662: 2,
		13519332445180858509: 2, 1547487083409799881: 2, 2390952627435288086: 2,
		10010188000308079562: 2, 2818013938175679542: 2, 2907213871584845690: 2,
		11640306818144854065: 2, 8136892014180937987: 2, 10967806897871852554: 2,
		11304673717770031417: 2, 3617793482601033721: 2, 5178574353791105996: 2,
		14952780245631022611: 2, 10310606393408053421: 2, 2206919212140649984: 2,
		16629395208036459405: 2, 12539866509347752348: 2, 17103245029269192293: 2,
		12750924512759867543: 2, 9780476084722178011: 2, 17620821003848466869: 2,
		5037594568239887287: 2, 1144727714558177208: 2, 1980151876238149577: 2,
		6371758528679396018: 2, 9505569090328980658: 2, 11358181454231669068: 2,
		12259010220883680481: 2, 8625475637465874387: 2, 15370934536452650969: 2,
		561609393383243949: 2, 17461083435351360494: 2, 3642529249771907852: 2,
		1162813471771266414: 2, 10858760819276804457: 2, 9180977859416245049: 2,
		9543981097923638940: 2, 7071874822455274849: 2, 10601286092791276348: 2,
		13163302015268521747: 2, 6923813503540154534: 2, 6020438046430678240: 2,
		9373820172778931598: 2, 14292105345829777466: 2, 10948259964512397596: 2,
		14254640341798639171: 2, 6092489486088769697: 2, 8979018883582413652: 2,
		17306602297842055447: 2, 4809700863668634488: 2, 11140783412102711707: 2,
		8216089276919407550: 2, 9976306730279595429: 2, 14635746178449090459: 2,
		6052015386905539264: 2, 9104670600498397412: 2, 17868499109854356487: 2,
		10135763941294698494: 2, 17574034713425784300: 2, 6980369048654761979: 2,
		6665984379174045842: 2, 13139259228144993496: 2, 13712170155967709927: 2,
		18202098220343052170: 2, 3034742157274025129: 2, 16122363573481711296: 2,
		756713903802128140: 2, 11283102233368395565: 2, 14687181759754063226: 2,
		8500248979898255752: 2, 17106512462442930931: 2, 17239360644679790380: 2,
		16611358370268130465: 2, 13142265765824720370: 2, 18278418671268021335: 2,
		13433098148408091174: 2, 2240302201352871990: 2, 1498201323238912754: 2,
		4314954763811547600: 2, 13674497258547943728: 2, 222934699652355611: 2,
		6262452640587530728: 2, 6227623672880880011: 2, 2283052295360767171: 2,
		13760076216600097710: 2, 15641635573164624527: 2, 8409604143278084605: 2,
		3020162961371361656: 2, 3279756798176958087: 2, 415321184407721024: 2,
		8393352959831816988: 2, 6697810790372463418: 2, 17322786724461005717: 2,
		14917812756909207152: 2, 2136886938658861102: 2, 16896194323991994558: 2,
		8446843103837922153: 2, 11767625891002185732: 2, 11882798070106527877: 2,
		2542901189077624671: 2, 13486568500115438163: 2, 2506233734851335627: 2,
		8732604479803206845: 2, 339569580227489037: 2, 1690465229413373993: 2,
		3437938054343125824: 2, 31173958969689621: 2, 3914382647595496872: 2,
		11414562039937846659: 2, 9655389238833579016: 2, 14582238447641378798: 2,
		16401433821025326122: 2, 17978414381390675713: 2, 14932479949152924390: 2,
		6862785447485556673: 2, 15026864933630233496: 2, 11930184198095432154: 2,
		6300240127318511314: 2, 13245944946096178160: 2, 10754756218735261956: 2,
		43830222939293150: 2, 6021812792690063204: 2, 3497379089261787123: 2,
		1905991336825974078: 2, 5198908649110879349: 2, 3071177144397095286: 2,
		10220649240219577117: 2, 4842108569598964204: 2, 6755483524409643239: 2,
		2357831814303510322: 2, 11253792603874884568: 2, 8630295969035957327: 2,
		5983209411776271491: 2, 6426374571234450119: 2, 2961792526449575695: 2,
		1742972278133951313: 2, 7974005635608230614: 2, 11344455032950580141: 2,
		8879067873186101328: 2, 17482409406108969231: 2, 4650988139208329987: 2,
		8245928115386995622: 2, 4610531874593169467: 2, 14151187951055255617: 2,
		17522458386059314957: 2, 324713726887922741: 2, 13448935949825444039: 2,
		9450052697387173459: 2, 310283347582052052: 2, 4521376749624659442: 2,
		8281549412369612409: 2, 8601130485605036576: 2, 3972625583571958105: 2,
		7226016965028752335: 2, 4394406279140502429: 2, 3259524634645959282: 2,
		17617180760731140734: 2, 12953598193818206729: 2, 11550872828501909543: 2,
		12773857689154127509: 2, 9818125368896163938: 2, 8171953713957296128: 2,
		9019122018503075158: 2, 12732941624075413435: 2, 15219334896526673099: 2,
		7309909873209269678: 2, 8774426416054742902: 2, 12346810874234619958: 2,
		10603134038279817750: 2, 3515397578793449695: 2, 17266117586341281897: 2,
		18235600444317221026: 2, 6294073867952369642: 2, 4776642055155957939: 2,
		15805293674852047196: 2, 16984928978413935878: 2, 3868736854073617371: 2,
		14596519327708796175: 2, 17783682681179918950: 2, 16330378338555214300: 2,
		1716080857152497496: 2, 18084617100450906404: 2, 8414369512336083541: 2,
		13886550536583273291: 2, 5977008216373807107: 2, 13944002384329977130: 2,
		3315700907001353927: 2, 2148316185515040314: 2, 10900879111934510018: 2,
		1457211897762219141: 2, 14935198464533120869: 2, 10658947583503675587: 2,
		6406737004197698257: 2, 16361737121928763358: 2, 6477867896414061978: 2,
		3222081966117459290: 2, 14767029780019023277: 2, 8191508058346596726: 2,
		13051411285556527186: 2, 17157876141198555887: 2, 8810928598331767987: 2,
		1442676147089119251: 2, 7883480285995675181: 2, 3042744561428274695: 2,
		10530879721697475446: 2, 17903367637428719018: 2, 15002061032979582829: 2,
		11007934543175517252: 2, 4898705896658480817: 2, 14695031391474078188: 2,
		6914309764511586460: 2, 1052234243844447975: 2, 9091496306634087244: 2,
		1274230434275721210: 2, 4842626802888295504: 2, 320386420384660034: 2,
		13299388756526694588: 2, 7657814840389185782: 2, 13017032257199870974: 2,
		5476505935439440136: 2, 614983136262554593: 2, 14400857341256581806: 2,
		9483865930582426278: 2}

	EdgePatterns = PatternBoard{
		7913954429948745590: 2, 434312698964737301: 2, 7438434044634809967: 2,
		743727264355525601: 2, 6528912109046573114: 2, 1954843936170280669: 2,
		4412507271814527935: 2, 14078117922965609758: 2, 5248204350980353930: 2,
		16446778725148239662: 2, 18353641643744158785: 2, 11401107909154091321: 2,
		217076294626000299: 2, 7550915976942328304: 2, 14545259179479006239: 2,
		17366845917353099598: 2, 9219079913240364374: 2, 10822066548826416259: 2,
		3752421542330856958: 2, 10014080811041299437: 2, 10962822558342844960: 2,
		6001729540519050646: 2, 17676050395447099922: 2, 9049623313050015662: 2,
		8857166951919245397: 2, 1964798283998035302: 2, 14509881524687185869: 2,
		14150239388223406431: 2, 194371767293498281: 2, 302340928393278830: 2,
		2774492871944267912: 2, 7173901419240384723: 2, 16447391986339804965: 2,
		7281894243192000020: 2, 10987919219937813817: 2, 930097624607091724: 2,
		5330440623281304042: 2, 2492631084098644337: 2, 5588818196038434213: 2,
		15888007128537545257: 2, 16088205017161222944: 2, 15719332615817016212: 2,
		5242076928767130138: 2, 7593271183731055682: 2, 2343568937044448669: 2,
		17143324364933318462: 2, 17732129701288099501: 2, 2999563780366722499: 2,
		10806516739648346233: 2, 16844663508623297125: 2, 11841101824755699701: 2,
		7047001305259728520: 2, 4668382780398805526: 2, 13560943046053799978: 2,
		11059197055457002605: 2, 856802868577750499: 2, 9515947998395131174: 2,
		8366741788823365278: 2, 1358658239147149773: 2, 15938833184133189574: 2,
		10384280625540226711: 2, 16647539993341744679: 2, 578434626920080940: 2,
		8509211956411978826: 2, 4004304771728474114: 2, 15953086503286277824: 2,
		6190573786354424442: 2, 2518294293600637642: 2, 18312484451343649797: 2,
		15008430530254383467: 2, 2016623819741493651: 2, 4015238883173997246: 2,
		16017428313199882834: 2, 14530101045882760212: 2, 11351265951447194594: 2,
		13883215629241615687: 2, 6647554391086049889: 2, 9300300216730069920: 2,
		7709309098932654650: 2, 13684569338782962616: 2, 4403703940162641069: 2,
		13654741514461412348: 2, 11470228972792439803: 2, 9269802076383598119: 2,
		1687248642448147860: 2, 2323336810016215400: 2, 11673420416879913059: 2,
		15966132300569633586: 2, 17023437659652076734: 2, 9276223634805419538: 2,
		1110485471286499824: 2, 8913492562088316440: 2, 3710253744798009890: 2,
		12432950055346446490: 2, 15452097811822882513: 2, 3768506672140108519: 2,
		17750365924455879689: 2, 11247926588680895705: 2, 9097686849011477332: 2,
		7161363456143697553: 2, 10774326071441950834: 2, 6156475225056967069: 2,
		16275007315739694204: 2, 3014429332529956966: 2, 15256216845838305087: 2,
		9672513915655089501: 2, 10130238429388527328: 2, 3890500333875113189: 2,
		424487963624638190: 2, 5797814136023791907: 2, 13839021069003946550: 2,
		9224468471006325479: 2, 6638662253673146327: 2, 2850857533936298622: 2,
		11978236553680881306: 2, 2991450572297978208: 2, 4138232375936630998: 2,
		7299954544902005936: 2, 6208473444400121122: 2, 3510771501765543679: 2}

	/*
		EyePatterns, HanePatterns, KiriPatterns, EdgePatterns = PatternBoard{}, PatternBoard{}, PatternBoard{}, PatternBoard{}

		b, w, e, l := Black, White, Empty, Wall

		// Eye patterns
		// Black
		//
		mb := Miniboard{
			b, b, b,
			b, e, b,
			b, b, b}
		EyePatterns[mb.Hashcode()] = Eye

		mb = Miniboard{
			e, b, e,
			b, e, b,
			e, b, e}
		EyePatterns[mb.Hashcode()] = Eye

		mb = Miniboard{
			b, b, b,
			b, e, b,
			w, b, b}
		mb.AllAddAs(Eye, EyePatterns)

		mb = Miniboard{
			e, b, b,
			b, e, b,
			w, b, b}
		mb.AllAddAs(Eye, EyePatterns)
		mb.Invert().AllAddAs(Eye, EyePatterns)

		mb = Miniboard{
			e, b, e,
			b, e, b,
			w, b, b}
		mb.AllAddAs(Eye, EyePatterns)
		mb.Invert().AllAddAs(Eye, EyePatterns)

		mb = Miniboard{
			e, b, e,
			b, e, b,
			w, b, e}
		mb.AllAddAs(Eye, EyePatterns)
		mb.Invert().AllAddAs(Eye, EyePatterns)

		// Force patterns
		// Force
		mb = Miniboard{
			b, w, b,
			e, e, e,
			e, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			e, e, e,
			b, b, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			e, e, e,
			w, b, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			e, e, e,
			e, b, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			e, e, e,
			b, w, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			e, e, e,
			b, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			e, e, e,
			w, w, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			e, e, e,
			w, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			e, e, e,
			e, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			e, e, e,
			e, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			e, e, e,
			b, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			e, e, e,
			w, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			e, e, e,
			e, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			e, e, e,
			b, e, w}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			e, e, e,
			b, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			e, e, e,
			w, e, w}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)
		///
		mb = Miniboard{
			b, w, e,
			b, e, e,
			e, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			b, e, e,
			b, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			b, e, e,
			w, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			b, e, e,
			e, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			b, e, e,
			b, e, w}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			b, e, e,
			b, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			b, e, e,
			w, e, w}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			b, e, e,
			e, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			b, e, e,
			b, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			b, e, e,
			w, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			b, e, e,
			e, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			b, e, e,
			b, e, w}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			b, e, e,
			b, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, b,
			b, e, e,
			w, e, w}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, w,
			b, e, e,
			e, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, w,
			b, e, e,
			b, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, w,
			b, e, e,
			w, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, w,
			b, e, e,
			e, e, b}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, w,
			b, e, e,
			b, e, w}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, w,
			b, e, e,
			b, e, e}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, w,
			b, e, e,
			w, e, w}
		mb.AllAddAs(Force, HanePatterns)
		mb.Invert().AllAddAs(Force, HanePatterns)

		mb = Miniboard{
			b, w, e,
			w, e, b,
			e, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, b,
			b, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, b,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		// Kiri
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, b,
			e, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, b,
			b, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, b,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, b,
			w, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, b,
			e, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, b,
			b, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, b,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, b,
			e, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, b,
			b, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, b,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, b,
			w, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, b,
			e, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, b,
			b, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, b,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, b,
			e, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, b,
			b, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, b,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, b,
			w, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, e,
			e, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, e,
			b, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, e,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, e,
			e, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, e,
			b, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, e,
			w, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, e,
			w, e, e,
			w, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, e,
			e, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, e,
			b, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, e,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, e,
			e, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, e,
			b, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, e,
			w, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, b,
			w, e, e,
			w, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, e,
			e, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, e,
			b, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, e,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, e,
			e, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, e,
			b, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, e,
			w, e, e}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, w, w,
			w, e, e,
			w, e, w}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, e,
			w, e, w,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, e, b,
			w, e, w,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, w,
			w, e, w,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, w,
			w, e, w,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, e,
			w, e, w,
			w, e, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, e,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, w, b,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, w,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, w,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, e,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, e,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, b,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, w,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, w,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, e,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, e,
			w, e, w,
			e, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, b,
			w, e, w,
			e, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, w,
			w, e, w,
			e, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, w,
			w, e, w,
			e, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, e,
			w, e, w,
			e, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, e,
			w, e, w,
			w, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, w, b,
			w, e, w,
			w, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, w,
			w, e, w,
			w, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, w,
			w, e, w,
			w, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, e,
			w, e, w,
			w, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, e,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, w, b,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, w,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, w,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, e,
			w, e, w,
			e, w, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, e,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, b,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, w,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, w,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, e,
			w, e, w,
			w, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			e, b, e,
			w, e, w,
			b, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, b,
			w, e, w,
			b, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, b, w,
			w, e, w,
			b, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, w,
			w, e, w,
			b, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			w, b, e,
			w, e, w,
			b, b, b}
		mb.AllAddAs(Force, KiriPatterns)
		mb.Invert().AllAddAs(Force, KiriPatterns)

		mb = Miniboard{
			b, e, e,
			w, e, e,
			l, l, l}
		mb.AllAddAs(Force, EdgePatterns)
		mb.Invert().AllAddAs(Force, EdgePatterns)

		mb = Miniboard{
			b, e, b,
			w, e, b,
			l, l, l}
		mb.AllAddAs(Force, EdgePatterns)
		mb.Invert().AllAddAs(Force, EdgePatterns)

		mb = Miniboard{
			b, e, w,
			w, e, b,
			l, l, l}
		mb.AllAddAs(Force, EdgePatterns)
		mb.Invert().AllAddAs(Force, EdgePatterns)

		mb = Miniboard{
			e, b, e,
			b, e, w,
			l, l, l}
		mb.AllAddAs(Force, EdgePatterns)
		mb.Invert().AllAddAs(Force, EdgePatterns)

		mb = Miniboard{
			b, b, b,
			b, e, w,
			l, l, l}
		mb.AllAddAs(Force, EdgePatterns)
		mb.Invert().AllAddAs(Force, EdgePatterns)

		mb = Miniboard{
			b, b, w,
			b, e, w,
			l, l, l}
		mb.AllAddAs(Force, EdgePatterns)
		mb.Invert().AllAddAs(Force, EdgePatterns)

		mb = Miniboard{
			b, b, e,
			b, e, w,
			l, l, l}
		mb.AllAddAs(Force, EdgePatterns)
		mb.Invert().AllAddAs(Force, EdgePatterns)

		mb = Miniboard{
			w, b, e,
			b, e, w,
			l, l, l}
		mb.AllAddAs(Force, EdgePatterns)
		mb.Invert().AllAddAs(Force, EdgePatterns)

	*/
}
